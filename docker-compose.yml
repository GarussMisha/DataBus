services:
  db_source_1:
    image: postgres:15
    container_name: db_source_1
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: pass1
      POSTGRES_DB: sourceDB1
    volumes:
      - ./DB/init-script/source_1/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    
  db_source_2:
    image: postgres:15
    container_name: db_source_2
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: pass1
      POSTGRES_DB: sourceDB2
    volumes:
      - ./DB/init-script/source_2/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  db_consumer_1:
    image: postgres:15
    container_name: db_consumer_1
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: pass1
      POSTGRES_DB: consumerDB1
    volumes:
      - ./DB/init-script/consumer_1/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"

  kafka_storage:
    image: bitnami/kafka:4.0.0-debian-12-r8
    container_name: kafka_storage
    environment:
      # Уникальный идентификатор узла в кластере KRaft
      - KAFKA_CFG_NODE_ID=0
      # Идентификатор брокера, назначенного контроллером
      - KAFKA_CFG_CONTROLLER_BROKER_ID=0
      # Роли процесса: здесь одновременно контроллер и брокер
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # Слушатели: PLAINTEXT для клиентов, CONTROLLER для внутрикластерного трафика
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # Соответствие слушателей их протоколам безопасности
      - KAFKA_CFG_LISTENERS_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      # Кворум контроллеров в формате nodeId@host:port — здесь единственный контроллер
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka_storage:9093
      # Указывает, какой слушатель используется контроллером
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - "9092:9092"
      - "9093:9093"
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_storage:9092

  data-produser-py:
    image: python_for_kafka:1.0.0
    container_name: data-produser-py
    working_dir: /app
    depends_on:
      - db_source_1
      - db_source_2
      - kafka_storage
    volumes:
      - ./producer:/app
    command: >
      bash -c "exec python producer_1.py"
  
  data-consumer-py:
    image: python_for_kafka:1.0.0
    container_name: data-consumer-py
    working_dir: /app
    depends_on:
      - db_source_1
      - db_source_2
      - kafka_storage
      - data-produser-py
    volumes:
      - ./consumer:/app
    command: >
      bash -c "exec python consumer_1.py"